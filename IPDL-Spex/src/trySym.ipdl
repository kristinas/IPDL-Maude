lang IPDL

parameter N : nat .

channel context delta = 
  input In[bound N] : bool ;

  output F[bound N] : bool ;
  output G[bound N] : bool
.

protocol real =
 (family F[bound N] 
  indices: i  bounds: bound N ::= 
  x : bool <- read In[i] ; return x
 )
 ||
 family G[bound N] 
  indices: i  bounds: bound N ::= 
  x : bool <- read In[i] ; return True
 .

 start with real over delta

save current configuration then
split-sym from 
  (family F[bound N] 
  indices: i  bounds: bound N ::= 
  x : bool <- read In[i] ; return x
 )
 ||
 family G[bound N] 
  indices: i  bounds: bound N ::= 
  y : bool <- read F[i] ; return True
  over savedDelta and savedOuts
 (subst fam F[bound N] 
   into fam G[bound N])
