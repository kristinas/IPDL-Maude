		     \||||||||||||||||||/
		   --- Welcome to Maude ---
		     /||||||||||||||||||\
	    Maude 3.3.1 built: Apr 13 2023 16:10:31
	     Copyright 1997-2023 SRI International
		   Wed Oct  9 21:28:46 2024
==========================================
reduce in MYTEST : addStratDecls emptyEnv {'sym`from_`(_`) [
  {{''idealPlusSim.Qid : 'Qid} : 'PName},
  {'_then_ [
    {'case`distinction`on_`(_`) [
      {'family_ [
        {'_`[_`] [
          {{''Out.Qid : 'Qid} : 'CName},
          {'bound_ [
            {'_+_ [
              {{''N.Qid : 'Qid} : 'CId},
              {{''2.Qid : 'Qid} : 'Nat}
            ] : 'NatTerm}
          ] : 'Bound}
        ] : 'FamilyName}
      ] : 'RuleTarget},
      {'__ [
        {'case:`(_`) [
          {'subst_into_ [
            {'chn_ [
              {{''OkAdvId.Qid : 'Qid} : 'CName}
            ] : 'CNameBound},
            {'fam_ [
              {'_`[_`] [
                {{''Out.Qid : 'Qid} : 'CName},
                {'bound_ [
                  {'`(_`) [
                    {'_+_ [
                      {{''N.Qid : 'Qid} : 'CId},
                      {{''2.Qid : 'Qid} : 'Nat}
                    ] : 'NatTerm}
                  ] : 'NatTerm}
                ] : 'Bound}
              ] : 'FamilyName}
            ] : 'CNameBound}
          ] : 'TopProof}
        ] : 'ProofCase},
        {'case:`(_`) [
          {'idle.TopProof : 'TopProof}
        ] : 'ProofCase}
      ] : 'ProofCaseList}
    ] : 'TopProof},
    {'_then_ [
      {'absorb_ [
        {'chn_ [
          {{''OkAdvId.Qid : 'Qid} : 'CName}
        ] : 'CNameBound}
      ] : 'TopProof},
      {'_then_ [
        {'subst_into_ [
          {'fam_ [
            {'_`[_`] [
              {{''LeakFlipIdAdv.Qid : 'Qid} : 'CName},
              {'bound_ [
                {'_+_ [
                  {{''N.Qid : 'Qid} : 'CId},
                  {{''2.Qid : 'Qid} : 'Nat}
                ] : 'NatTerm}
              ] : 'Bound}
            ] : 'FamilyName}
          ] : 'CNameBound},
          {'chn_ [
            {{''LastCommit.Qid : 'Qid} : 'CName}
          ] : 'CNameBound}
        ] : 'TopProof},
        {'_then_ [
          {'absorb_ [
            {'fam_ [
              {'_`[_`] [
                {{''LeakFlipIdAdv.Qid : 'Qid} : 'CName},
                {'bound_ [
                  {'_+_ [
                    {{''N.Qid : 'Qid} : 'CId},
                    {{''2.Qid : 'Qid} : 'Nat}
                  ] : 'NatTerm}
                ] : 'Bound}
              ] : 'FamilyName}
            ] : 'CNameBound}
          ] : 'TopProof},
          {'_then_ [
            {'case`distinction`on_`(_`) [
              {'family_ [
                {'_`[_`] [
                  {{''Out.Qid : 'Qid} : 'CName},
                  {'bound_ [
                    {'_+_ [
                      {{''N.Qid : 'Qid} : 'CId},
                      {{''2.Qid : 'Qid} : 'Nat}
                    ] : 'NatTerm}
                  ] : 'Bound}
                ] : 'FamilyName}
              ] : 'RuleTarget},
              {'__ [
                {'case:`(_`) [
                  {'sym`from_`(_`) [
                    {'change_with_in_ [
                      {'fam_ [
                        {'_`[_`] [
                          {{''Out.Qid : 'Qid} : 'CName},
                          {'bound_ [
                            {'`(_`) [
                              {'_+_ [
                                {{''N.Qid : 'Qid} : 'CId},
                                {{''2.Qid : 'Qid} : 'Nat}
                              ] : 'NatTerm}
                            ] : 'NatTerm}
                          ] : 'Bound}
                        ] : 'FamilyName}
                      ] : 'CNameBound},
                      {'_:_<-_;_ [
                        {{''ao.Qid : 'Qid} : 'VId},
                        {{''unit.Qid : 'Qid} : 'TId},
                        {'read_ [
                          {'_`[_`] [
                            {{''AllOpen.Qid : 'Qid} : 'CName},
                            {'_+_ [
                              {{''N.Qid : 'Qid} : 'CId},
                              {{''2.Qid : 'Qid} : 'Nat}
                            ] : 'NatTerm}
                          ] : 'CNameIndex}
                        ] : 'IPDLReaction},
                        {'_:_<-_;_ [
                          {{''sc.Qid : 'Qid} : 'VId},
                          {{''bool.Qid : 'Qid} : 'TId},
                          {'read_ [
                            {'_`[_`] [
                              {{''SumCommit.Qid : 'Qid} : 'CName},
                              {'_+_ [
                                {{''N.Qid : 'Qid} : 'CId},
                                {{''2.Qid : 'Qid} : 'Nat}
                              ] : 'NatTerm}
                            ] : 'CNameIndex}
                          ] : 'IPDLReaction},
                          {'return_ [
                            {{''sc.Qid : 'Qid} : 'VId}
                          ] : 'IPDLReaction}
                        ] : 'IPDLReaction}
                      ] : 'IPDLReaction},
                      {'currentProtocol.IPDLProtocol : 'IPDLProtocol}
                    ] : 'IPDLProtocol},
                    {'_then_ [
                      {'subst_into_ [
                        {'fam_ [
                          {'_`[_`] [
                            {{''SumCommit.Qid : 'Qid} : 'CName},
                            {'bound_ [
                              {'`(_`) [
                                {'_+_ [
                                  {{''N.Qid : 'Qid} : 'CId},
                                  {{''3.Qid : 'Qid} : 'Nat}
                                ] : 'NatTerm}
                              ] : 'NatTerm}
                            ] : 'Bound}
                          ] : 'FamilyName}
                        ] : 'CNameBound},
                        {'fam_ [
                          {'_`[_`] [
                            {{''Out.Qid : 'Qid} : 'CName},
                            {'bound_ [
                              {'`(_`) [
                                {'_+_ [
                                  {{''N.Qid : 'Qid} : 'CId},
                                  {{''2.Qid : 'Qid} : 'Nat}
                                ] : 'NatTerm}
                              ] : 'NatTerm}
                            ] : 'Bound}
                          ] : 'FamilyName}
                        ] : 'CNameBound}
                      ] : 'TopProof},
                      {'_then_ [
                        {'subst_into_ [
                          {'chn_ [
                            {{''LastCommit.Qid : 'Qid} : 'CName}
                          ] : 'CNameBound},
                          {'fam_ [
                            {'_`[_`] [
                              {{''Out.Qid : 'Qid} : 'CName},
                              {'bound_ [
                                {'`(_`) [
                                  {'_+_ [
                                    {{''N.Qid : 'Qid} : 'CId},
                                    {{''2.Qid : 'Qid} : 'Nat}
                                  ] : 'NatTerm}
                                ] : 'NatTerm}
                              ] : 'Bound}
                            ] : 'FamilyName}
                          ] : 'CNameBound}
                        ] : 'TopProof},
                        {'rename_in_ [
                          {'_to_ [
                            {{''x.Qid : 'Qid} : 'VId},
                            {{''sc.Qid : 'Qid} : 'VId}
                          ] : 'QidPair},
                          {'fam_ [
                            {'_`[_`] [
                              {{''Out.Qid : 'Qid} : 'CName},
                              {'bound_ [
                                {'`(_`) [
                                  {'_+_ [
                                    {{''N.Qid : 'Qid} : 'CId},
                                    {{''2.Qid : 'Qid} : 'Nat}
                                  ] : 'NatTerm}
                                ] : 'NatTerm}
                              ] : 'Bound}
                            ] : 'FamilyName}
                          ] : 'CNameBound}
                        ] : 'TopProof}
                      ] : 'TopProof}
                    ] : 'TopProof}
                  ] : 'TopProof}
                ] : 'ProofCase},
                {'case:`(_`) [
                  {'idle.TopProof : 'TopProof}
                ] : 'ProofCase}
              ] : 'ProofCaseList}
            ] : 'TopProof},
            {'_then_ [
              {'fold_into_ [
                {'chn_ [
                  {{''Flip.Qid : 'Qid} : 'CName}
                ] : 'CNameBound},
                {'chn_ [
                  {{''LastCommit.Qid : 'Qid} : 'CName}
                ] : 'CNameBound}
              ] : 'TopProof},
              {'_then_ [
                {'use`assumption_on_ [
                  {{''flipInvariantXorFixed.Qid : 'Qid} : 'AssumName},
                  {{''LastCommit.Qid : 'Qid} : 'CName}
                ] : 'TopProof},
                {'_then_ [
                  {'sym`from_`(_`) [
                    {'extend_with`internal`channel_typed:_assigned:_ [
                      {'`(_`) [
                        {'change_with_in_ [
                          {'chn_ [
                            {{''LastCommit.Qid : 'Qid} : 'CName}
                          ] : 'CNameBound},
                          {'_:_<-_;_ [
                            {{''x.Qid : 'Qid} : 'VId},
                            {{''bool.Qid : 'Qid} : 'TId},
                            {'read_ [
                              {'_`[_`] [
                                {{''SumCommit.Qid : 'Qid} : 'CName},
                                {'_+_ [
                                  {{''N.Qid : 'Qid} : 'CId},
                                  {{''1.Qid : 'Qid} : 'Nat}
                                ] : 'NatTerm}
                              ] : 'CNameIndex}
                            ] : 'IPDLReaction},
                            {'_:_<-_;_ [
                              {{''commit.Qid : 'Qid} : 'VId},
                              {{''bool.Qid : 'Qid} : 'TId},
                              {'read_ [
                                {'_`[_`] [
                                  {{''Commit.Qid : 'Qid} : 'CName},
                                  {'_+_ [
                                    {{''N.Qid : 'Qid} : 'CId},
                                    {{''1.Qid : 'Qid} : 'Nat}
                                  ] : 'NatTerm}
                                ] : 'CNameIndex}
                              ] : 'IPDLReaction},
                              {'return_ [
                                {{''commit.Qid : 'Qid} : 'VId}
                              ] : 'IPDLReaction}
                            ] : 'IPDLReaction}
                          ] : 'IPDLReaction},
                          {'currentProtocol.IPDLProtocol : 'IPDLProtocol}
                        ] : 'IPDLProtocol}
                      ] : 'IPDLProtocol},
                      {'_`[_`] [
                        {{''Commit.Qid : 'Qid} : 'CName},
                        {'_+_ [
                          {{''N.Qid : 'Qid} : 'CId},
                          {{''1.Qid : 'Qid} : 'Nat}
                        ] : 'NatTerm}
                      ] : 'CNameIndex},
                      {{''bool.Qid : 'Qid} : 'TId},
                      {'samp_`(_`) [
                        {{''flip.Qid : 'Qid} : 'DName},
                        {'`(`).IPDLExpr : 'IPDLExpr}
                      ] : 'IPDLReaction}
                    ] : 'IPDLProtocol},
                    {'fold_into_ [
                      {'chn_ [
                        {'_`[_`] [
                          {{''Commit.Qid : 'Qid} : 'CName},
                          {'_+_ [
                            {{''N.Qid : 'Qid} : 'CId},
                            {{''1.Qid : 'Qid} : 'Nat}
                          ] : 'NatTerm}
                        ] : 'CNameIndex}
                      ] : 'CNameBound},
                      {'chn_ [
                        {{''LastCommit.Qid : 'Qid} : 'CName}
                      ] : 'CNameBound}
                    ] : 'TopProof}
                  ] : 'TopProof},
                  {'_then_ [
                    {'case`distinction`on_`(_`) [
                      {'family_ [
                        {'_`[_`] [
                          {{''Opened.Qid : 'Qid} : 'CName},
                          {'bound_ [
                            {'_+_ [
                              {{''N.Qid : 'Qid} : 'CId},
                              {{''2.Qid : 'Qid} : 'Nat}
                            ] : 'NatTerm}
                          ] : 'Bound}
                        ] : 'FamilyName}
                      ] : 'RuleTarget},
                      {'__ [
                        {'case:`(_`) [
                          {'_then_ [
                            {'rename_in_ [
                              {'_to_ [
                                {{''x.Qid : 'Qid} : 'VId},
                                {{''o.Qid : 'Qid} : 'VId}
                              ] : 'QidPair},
                              {'fam_ [
                                {'_`[_`] [
                                  {{''Opened.Qid : 'Qid} : 'CName},
                                  {'bound_ [
                                    {'_+_ [
                                      {{''N.Qid : 'Qid} : 'CId},
                                      {{''2.Qid : 'Qid} : 'Nat}
                                    ] : 'NatTerm}
                                  ] : 'Bound}
                                ] : 'FamilyName}
                              ] : 'CNameBound}
                            ] : 'TopProof},
                            {'subst_into_ [
                              {'chn_ [
                                {{''LastCommit.Qid : 'Qid} : 'CName}
                              ] : 'CNameBound},
                              {'fam_ [
                                {'_`[_`] [
                                  {{''Opened.Qid : 'Qid} : 'CName},
                                  {'bound_ [
                                    {'_+_ [
                                      {{''N.Qid : 'Qid} : 'CId},
                                      {{''2.Qid : 'Qid} : 'Nat}
                                    ] : 'NatTerm}
                                  ] : 'Bound}
                                ] : 'FamilyName}
                              ] : 'CNameBound}
                            ] : 'TopProof}
                          ] : 'TopProof}
                        ] : 'ProofCase},
                        {'case:`(_`) [
                          {'idle.TopProof : 'TopProof}
                        ] : 'ProofCase}
                      ] : 'ProofCaseList}
                    ] : 'TopProof},
                    {'_then_ [
                      {'case`distinction`on_`(_`) [
                        {'family_ [
                          {'_`[_`] [
                            {{''SumCommit.Qid : 'Qid} : 'CName},
                            {'bound_ [
                              {'_+_ [
                                {{''N.Qid : 'Qid} : 'CId},
                                {{''3.Qid : 'Qid} : 'Nat}
                              ] : 'NatTerm}
                            ] : 'Bound}
                          ] : 'FamilyName}
                        ] : 'RuleTarget},
                        {'__ [
                          {'case:`(_`) [
                            {'idle.TopProof : 'TopProof}
                          ] : 'ProofCase},
                          {'__ [
                            {'case:`(_`) [
                              {'_then_ [
                                {'subst_into_ [
                                  {'chn_ [
                                    {{''LastCommit.Qid : 'Qid} : 'CName}
                                  ] : 'CNameBound},
                                  {'fam_ [
                                    {'_`[_`] [
                                      {{''SumCommit.Qid : 'Qid} : 'CName},
                                      {'bound_ [
                                        {'_+_ [
                                          {{''N.Qid : 'Qid} : 'CId},
                                          {{''3.Qid : 'Qid} : 'Nat}
                                        ] : 'NatTerm}
                                      ] : 'Bound}
                                    ] : 'FamilyName}
                                  ] : 'CNameBound}
                                ] : 'TopProof},
                                {'rename_in_ [
                                  {'_to_ [
                                    {{''commit.Qid : 'Qid} : 'VId},
                                    {{''c.Qid : 'Qid} : 'VId}
                                  ] : 'QidPair},
                                  {'fam_ [
                                    {'_`[_`] [
                                      {{''SumCommit.Qid : 'Qid} : 'CName},
                                      {'bound_ [
                                        {'_+_ [
                                          {{''N.Qid : 'Qid} : 'CId},
                                          {{''3.Qid : 'Qid} : 'Nat}
                                        ] : 'NatTerm}
                                      ] : 'Bound}
                                    ] : 'FamilyName}
                                  ] : 'CNameBound}
                                ] : 'TopProof}
                              ] : 'TopProof}
                            ] : 'ProofCase},
                            {'case:`(_`) [
                              {'idle.TopProof : 'TopProof}
                            ] : 'ProofCase}
                          ] : 'ProofCaseList}
                        ] : 'ProofCaseList}
                      ] : 'TopProof},
                      {'_then_ [
                        {'absorb_ [
                          {'chn_ [
                            {{''LastCommit.Qid : 'Qid} : 'CName}
                          ] : 'CNameBound}
                        ] : 'TopProof},
                        {'_then_ [
                          {'merge`case_=_with`otherwise`for_ [
                            {{''j.Qid : 'Qid} : 'CName},
                            {'_+_ [
                              {{''N.Qid : 'Qid} : 'CId},
                              {{''2.Qid : 'Qid} : 'Nat}
                            ] : 'NatTerm},
                            {'fam_ [
                              {'_`[_`] [
                                {{''SumCommit.Qid : 'Qid} : 'CName},
                                {'bound_ [
                                  {'_+_ [
                                    {{''N.Qid : 'Qid} : 'CId},
                                    {{''3.Qid : 'Qid} : 'Nat}
                                  ] : 'NatTerm}
                                ] : 'Bound}
                              ] : 'FamilyName}
                            ] : 'CNameBound}
                          ] : 'TopProof},
                          {'_then_ [
                            {'case`distinction`on_`(_`) [
                              {'family_ [
                                {'_`[_`] [
                                  {{''SumCommit.Qid : 'Qid} : 'CName},
                                  {'bound_ [
                                    {'_+_ [
                                      {{''N.Qid : 'Qid} : 'CId},
                                      {{''3.Qid : 'Qid} : 'Nat}
                                    ] : 'NatTerm}
                                  ] : 'Bound}
                                ] : 'FamilyName}
                              ] : 'RuleTarget},
                              {'__ [
                                {'case:`(_`) [
                                  {'idle.TopProof : 'TopProof}
                                ] : 'ProofCase},
                                {'case:`(_`) [
                                  {'rename_in_ [
                                    {'_`,_ [
                                      {'_to_ [
                                        {{''c.Qid : 'Qid} : 'VId},
                                        {{''cj.Qid : 'Qid} : 'VId}
                                      ] : 'QidPair},
                                      {'_to_ [
                                        {{''x.Qid : 'Qid} : 'VId},
                                        {{''xj.Qid : 'Qid} : 'VId}
                                      ] : 'QidPair}
                                    ] : 'QidPairList},
                                    {'fam_ [
                                      {'_`[_`] [
                                        {{''SumCommit.Qid : 'Qid} : 'CName},
                                        {'bound_ [
                                          {'_+_ [
                                            {{''N.Qid : 'Qid} : 'CId},
                                            {{''3.Qid : 'Qid} : 'Nat}
                                          ] : 'NatTerm}
                                        ] : 'Bound}
                                      ] : 'FamilyName}
                                    ] : 'CNameBound}
                                  ] : 'TopProof}
                                ] : 'ProofCase}
                              ] : 'ProofCaseList}
                            ] : 'TopProof},
                            {'on`branch_of_`(_`) [
                              {'_=_ [
                                {{''i.Qid : 'Qid} : 'CId},
                                {'_+_ [
                                  {{''N.Qid : 'Qid} : 'CId},
                                  {{''1.Qid : 'Qid} : 'Nat}
                                ] : 'NatTerm}
                              ] : 'BoolTerm},
                              {'family_ [
                                {'_`[_`] [
                                  {{''Opened.Qid : 'Qid} : 'CName},
                                  {'bound_ [
                                    {'_+_ [
                                      {{''N.Qid : 'Qid} : 'CId},
                                      {{''2.Qid : 'Qid} : 'Nat}
                                    ] : 'NatTerm}
                                  ] : 'Bound}
                                ] : 'FamilyName}
                              ] : 'RuleTarget},
                              {'_then_ [
                                {'subst_into_ [
                                  {'fam_ [
                                    {'_`[_`] [
                                      {{''Open.Qid : 'Qid} : 'CName},
                                      {'bound_ [
                                        {'_+_ [
                                          {{''N.Qid : 'Qid} : 'CId},
                                          {{''2.Qid : 'Qid} : 'Nat}
                                        ] : 'NatTerm}
                                      ] : 'Bound}
                                    ] : 'FamilyName}
                                  ] : 'CNameBound},
                                  {'fam_ [
                                    {'_`[_`] [
                                      {{''Opened.Qid : 'Qid} : 'CName},
                                      {'bound_ [
                                        {'_+_ [
                                          {{''N.Qid : 'Qid} : 'CId},
                                          {{''2.Qid : 'Qid} : 'Nat}
                                        ] : 'NatTerm}
                                      ] : 'Bound}
                                    ] : 'FamilyName}
                                  ] : 'CNameBound}
                                ] : 'TopProof},
                                {'sym`from_`(_`) [
                                  {'change_with_in_ [
                                    {'fam_ [
                                      {'_`[_`] [
                                        {{''Opened.Qid : 'Qid} : 'CName},
                                        {'bound_ [
                                          {'`(_`) [
                                            {'_+_ [
                                              {{''N.Qid : 'Qid} : 'CId},
                                              {{''2.Qid : 'Qid} : 'Nat}
                                            ] : 'NatTerm}
                                          ] : 'NatTerm}
                                        ] : 'Bound}
                                      ] : 'FamilyName}
                                    ] : 'CNameBound},
                                    {'_:_<-_;_ [
                                      {{''commit.Qid : 'Qid} : 'VId},
                                      {{''bool.Qid : 'Qid} : 'TId},
                                      {'read_ [
                                        {'_`[_`] [
                                          {{''Commit.Qid : 'Qid} : 'CName},
                                          {'_+_ [
                                            {{''N.Qid : 'Qid} : 'CId},
                                            {{''1.Qid : 'Qid} : 'Nat}
                                          ] : 'NatTerm}
                                        ] : 'CNameIndex}
                                      ] : 'IPDLReaction},
                                      {'_:_<-_;_ [
                                        {{''o.Qid : 'Qid} : 'VId},
                                        {{''unit.Qid : 'Qid} : 'TId},
                                        {'read_ [
                                          {'_`[_`] [
                                            {{''Open.Qid : 'Qid} : 'CName},
                                            {'_+_ [
                                              {{''N.Qid : 'Qid} : 'CId},
                                              {{''1.Qid : 'Qid} : 'Nat}
                                            ] : 'NatTerm}
                                          ] : 'CNameIndex}
                                        ] : 'IPDLReaction},
                                        {'return_ [
                                          {{''commit.Qid : 'Qid} : 'VId}
                                        ] : 'IPDLReaction}
                                      ] : 'IPDLReaction}
                                    ] : 'IPDLReaction},
                                    {'currentProtocol.IPDLProtocol :
    'IPDLProtocol}
                                  ] : 'IPDLProtocol},
                                  {'subst_into_ [
                                    {'fam_ [
                                      {'_`[_`] [
                                        {{''Open.Qid : 'Qid} : 'CName},
                                        {'bound_ [
                                          {'_+_ [
                                            {{''N.Qid : 'Qid} : 'CId},
                                            {{''2.Qid : 'Qid} : 'Nat}
                                          ] : 'NatTerm}
                                        ] : 'Bound}
                                      ] : 'FamilyName}
                                    ] : 'CNameBound},
                                    {'fam_ [
                                      {'_`[_`] [
                                        {{''Opened.Qid : 'Qid} : 'CName},
                                        {'bound_ [
                                          {'_+_ [
                                            {{''N.Qid : 'Qid} : 'CId},
                                            {{''2.Qid : 'Qid} : 'Nat}
                                          ] : 'NatTerm}
                                        ] : 'Bound}
                                      ] : 'FamilyName}
                                    ] : 'CNameBound}
                                  ] : 'TopProof}
                                ] : 'TopProof}
                              ] : 'TopProof}
                            ] : 'TopProof}
                          ] : 'TopProof}
                        ] : 'TopProof}
                      ] : 'TopProof}
                    ] : 'TopProof}
                  ] : 'TopProof}
                ] : 'TopProof}
              ] : 'TopProof}
            ] : 'TopProof}
          ] : 'TopProof}
        ] : 'TopProof}
      ] : 'TopProof}
    ] : 'TopProof}
  ] : 'TopProof}
] : 'TopProof} .
rewrites: 3879 in 0ms cpu (2ms real) (~ rewrites/second)
result Env: buildEnv pConfig(typesOf ('bool ; 'nat ; 'unit), emptyChannelCtx,
    emptyProtocol, empty, empty, empty) empty empty smod 'TEST is
  protecting 'STRATS .
  sorts none .
  none
  none
  none
  none
  none
  strat 'gn_0 : nil @ 'ProtocolConfig [none] .
  strat 'gn_1 : nil @ 'ProtocolConfig [none] .
  strat 'gn_2 : nil @ 'ProtocolConfig [none] .
  strat 'gn_3 : nil @ 'ProtocolConfig [none] .
  strat 'gn_4 : nil @ 'ProtocolConfig [none] .
  strat 'gn_5 : nil @ 'ProtocolConfig [none] .
  strat 'gn_6 : nil @ 'ProtocolConfig [none] .
  strat 'gn_7 : nil @ 'ProtocolConfig [none] .
  strat 'gn_8 : nil @ 'ProtocolConfig [none] .
  strat 'gn_9 : nil @ 'ProtocolConfig [none] .
  sd 'gn_0[[empty]] := matchrew 'pConf:ProtocolConfig s.t. 'pConfig[
    'Sigma:Signature,'Delta:ChannelContext,'P:Protocol,'Ins:Set`{CNameBound`},
    'Outs:Set`{CNameBound`},'A:Set`{BoolTerm`}] := 'pConf:ProtocolConfig by
    'pConf:ProtocolConfig using 'SYM[
    'Delta1:ChannelContext <- 'Delta:ChannelContext ; 
    'O1:Set`{CNameBound`} <- 'Outs:Set`{CNameBound`} ; 
    'P1:Protocol <- 'emptyProtocol.Protocol]{'sugar-newNF[none]{empty} ; (
    'COMP-NEW-newNF-inside-new[none]{empty}) ! ; 'gn_1[[empty]] ; 'absorb[[
    'chn_[''OkAdvId.Sort]]] ; 'subst[['fam_['_`[_`][''LeakFlipIdAdv.Sort,
    'bound_['_+_['natAsTerm_['s_^2['0.Zero]],'qidAsTerm_[''N.Sort]]]]],'chn_[
    ''LastCommit.Sort]]] ; 'absorb[['fam_['_`[_`][''LeakFlipIdAdv.Sort,'bound_[
    '_+_['natAsTerm_['s_^2['0.Zero]],'qidAsTerm_[''N.Sort]]]]]]] ; 'gn_2[[
    empty]] ; 'foldNF[[''Flip.Sort,''LastCommit.Sort]] ;
    'applyflipInvariantXorFixed[[''LastCommit.Sort]] ; 'gn_4[[empty]] ; 'gn_5[[
    empty]] ; 'gn_6[[empty]] ; 'absorb[['chn_[''LastCommit.Sort]]] ;
    'mergeCaseWithOtherwise[['fam_['_`[_`][''SumCommit.Sort,'bound_['_+_[
    'natAsTerm_['s_^3['0.Zero]],'qidAsTerm_[''N.Sort]]]]],'_+_['natAsTerm_[
    's_^2['0.Zero]],'qidAsTerm_[''N.Sort]]]] ; 'gn_7[[empty]] ; 'gn_8[[empty]]}
    [none] .
  sd 'gn_1[[empty]] := match 'pConf:ProtocolConfig s.t. ('startsWithNew_[
    'pConf:ProtocolConfig] = 'true.Bool) ? 'CONG-NEW-NF[none]{'gn_1[[empty]]} :
    'CASE-DISTINCTION-one-R[
    'blist:List`{Bounds`} <- 'bound_['_+_['natAsTerm_['s_^2['0.Zero]],
    'qidAsTerm_[''N.Sort]]] ; 
    'fns:NameWithScripts <- ''Out.Sort]{try('moveProtocolUnderNewNF[[empty]]) ;
    'subst[['chn_[''OkAdvId.Sort],'fam_['_`[_`][''Out.Sort,'bound_['_+_[
    'natAsTerm_['s_^2['0.Zero]],'qidAsTerm_[''N.Sort]]]]]]],
    'CASE-DISTINCTION-one-R-end[
    'fns:NameWithScripts <- ''Out.Sort]{try('moveProtocolUnderNewNF[[empty]])}}
    [none] .
  sd 'gn_2[[empty]] := match 'pConf:ProtocolConfig s.t. ('startsWithNew_[
    'pConf:ProtocolConfig] = 'true.Bool) ? 'CONG-NEW-NF[none]{'gn_2[[empty]]} :
    'CASE-DISTINCTION-one-R[
    'blist:List`{Bounds`} <- 'bound_['_+_['natAsTerm_['s_^2['0.Zero]],
    'qidAsTerm_[''N.Sort]]] ; 
    'fns:NameWithScripts <- ''Out.Sort]{try('moveProtocolUnderNewNF[[empty]]) ;
    'gn_3[[empty]],'CASE-DISTINCTION-one-R-end[
    'fns:NameWithScripts <- ''Out.Sort]{try('moveProtocolUnderNewNF[[empty]])}}
    [none] .
  sd 'gn_3[[empty]] := matchrew 'pConf:ProtocolConfig s.t. 'pConfig[
    'Sigma:Signature,'Delta:ChannelContext,'P:Protocol,'Ins:Set`{CNameBound`},
    'Outs:Set`{CNameBound`},'A:Set`{BoolTerm`}] := 'pConf:ProtocolConfig by
    'pConf:ProtocolConfig using 'SYM[
    'Delta1:ChannelContext <- 'Delta:ChannelContext ; 
    'O1:Set`{CNameBound`} <- 'Outs:Set`{CNameBound`} ; 
    'P1:Protocol <- 'addInternalChannel_typed_assigned_in_['_`[_`][
    ''Commit.Sort,'_+_['natAsTerm_['s_['0.Zero]],'qidAsTerm_[''N.Sort]]],
    'typeName_[''bool.Sort],'nf['emptyBRList.BRList,'samp_['_<_>[''flip.Sort,
    '`(`).IPDLExpression]]],'change_with_in_['chn_[''LastCommit.Sort],'nf['__[
    '_:_<-_[''commit.Sort,'typeName_[''bool.Sort],'read_['_`[_`][''Commit.Sort,
    '_+_['natAsTerm_['s_['0.Zero]],'qidAsTerm_[''N.Sort]]]]],'_:_<-_[''x.Sort,
    'typeName_[''bool.Sort],'read_['_`[_`][''SumCommit.Sort,'_+_['natAsTerm_[
    's_['0.Zero]],'qidAsTerm_[''N.Sort]]]]]],'return_[''commit.Sort]],
    'P:Protocol]]]{'sugar-newNF[none]{empty} ; ('COMP-NEW-newNF-inside-new[
    none]{empty}) ! ; 'foldNF[['_`[_`][''Commit.Sort,'_+_['natAsTerm_['s_[
    '0.Zero]],'qidAsTerm_[''N.Sort]]],''LastCommit.Sort]]} [none] .
  sd 'gn_4[[empty]] := match 'pConf:ProtocolConfig s.t. ('startsWithNew_[
    'pConf:ProtocolConfig] = 'true.Bool) ? 'CONG-NEW-NF[none]{'gn_4[[empty]]} :
    'CASE-DISTINCTION-one-R[
    'blist:List`{Bounds`} <- 'bound_['_+_['natAsTerm_['s_^2['0.Zero]],
    'qidAsTerm_[''N.Sort]]] ; 
    'fns:NameWithScripts <- ''Opened.Sort]{try('moveProtocolUnderNewNF[[
    empty]]) ; 'applyAlphaNFPr[['fam_['_`[_`][''Opened.Sort,'bound_['_+_[
    'natAsTerm_['s_^2['0.Zero]],'qidAsTerm_[''N.Sort]]]]],'__['<<_`,_>>[
    ''x.Sort,''o.Sort],'emptyQidPairList.QidPairList]]] ; 'subst[['chn_[
    ''LastCommit.Sort],'fam_['_`[_`][''Opened.Sort,'bound_['_+_['natAsTerm_[
    's_^2['0.Zero]],'qidAsTerm_[''N.Sort]]]]]]],'CASE-DISTINCTION-one-R-end[
    'fns:NameWithScripts <- ''Opened.Sort]{try('moveProtocolUnderNewNF[[
    empty]])}} [none] .
  sd 'gn_5[[empty]] := match 'pConf:ProtocolConfig s.t. ('startsWithNew_[
    'pConf:ProtocolConfig] = 'true.Bool) ? 'CONG-NEW-NF[none]{'gn_5[[empty]]} :
    'CASE-DISTINCTION-one-R[
    'blist:List`{Bounds`} <- 'bound_['_+_['natAsTerm_['s_^3['0.Zero]],
    'qidAsTerm_[''N.Sort]]] ; 
    'fns:NameWithScripts <- ''SumCommit.Sort]{try('moveProtocolUnderNewNF[[
    empty]]),'CASE-DISTINCTION-one-R[
    'fns:NameWithScripts <- ''SumCommit.Sort]{try('moveProtocolUnderNewNF[[
    empty]]) ; 'subst[['chn_[''LastCommit.Sort],'fam_['_`[_`][''SumCommit.Sort,
    'bound_['_+_['natAsTerm_['s_^3['0.Zero]],'qidAsTerm_[''N.Sort]]]]]]] ;
    'applyAlphaNFPr[['fam_['_`[_`][''SumCommit.Sort,'bound_['_+_['natAsTerm_[
    's_^3['0.Zero]],'qidAsTerm_[''N.Sort]]]]],'__['<<_`,_>>[''commit.Sort,
    ''c.Sort],'emptyQidPairList.QidPairList]]],'CASE-DISTINCTION-one-R-end[
    'fns:NameWithScripts <- ''SumCommit.Sort]{try('moveProtocolUnderNewNF[[
    empty]])}}} [none] .
  sd 'gn_6[[empty]] := match 'pConf:ProtocolConfig s.t. ('startsWithNew_[
    'pConf:ProtocolConfig] = 'true.Bool) ? 'CONG-NEW-NF[none]{'gn_6[[empty]]} :
    'CASE-DISTINCTION-one-R[
    'blist:List`{Bounds`} <- 'bound_['_+_['natAsTerm_['s_^3['0.Zero]],
    'qidAsTerm_[''N.Sort]]] ; 
    'fns:NameWithScripts <- ''SumCommit.Sort]{try('moveProtocolUnderNewNF[[
    empty]]),'CASE-DISTINCTION-one-R-end[
    'fns:NameWithScripts <- ''SumCommit.Sort]{try('moveProtocolUnderNewNF[[
    empty]]) ; 'applyAlphaNFPr[['fam_['_`[_`][''SumCommit.Sort,'bound_['_+_[
    'natAsTerm_['s_^3['0.Zero]],'qidAsTerm_[''N.Sort]]]]],'__['<<_`,_>>[
    ''c.Sort,''cj.Sort],'<<_`,_>>[''x.Sort,''xj.Sort],
    'emptyQidPairList.QidPairList]]]}} [none] .
  sd 'gn_7[[empty]] := match 'pConf:ProtocolConfig s.t. ('startsWithNew_[
    'pConf:ProtocolConfig] = 'true.Bool) ? 'CONG-NEW-NF[none]{'gn_7[[empty]]} :
    'select-branch-family-r[
    'blist:List`{Bounds`} <- 'bound_['_+_['natAsTerm_['s_^2['0.Zero]],
    'qidAsTerm_[''N.Sort]]] ; 
    'bt:BoolTerm <- '_=T=_['qidAsTerm_[''i.Sort],'_+_['natAsTerm_['s_[
    '0.Zero]],'qidAsTerm_[''N.Sort]]] ; 
    'fns:NameWithScripts <- ''Opened.Sort]{'subst[['fam_['_`[_`][''Open.Sort,
    'bound_['_+_['natAsTerm_['s_^2['0.Zero]],'qidAsTerm_[''N.Sort]]]]],'fam_[
    '_`[_`][''Opened.Sort,'bound_['_+_['natAsTerm_['s_^2['0.Zero]],'qidAsTerm_[
    ''N.Sort]]]]]]] ; 'gn_8[[empty]]} [none] .
  sd 'gn_8[[empty]] := matchrew 'pConf:ProtocolConfig s.t. 'pConfig[
    'Sigma:Signature,'Delta:ChannelContext,'P:Protocol,'Ins:Set`{CNameBound`},
    'Outs:Set`{CNameBound`},'A:Set`{BoolTerm`}] := 'pConf:ProtocolConfig by
    'pConf:ProtocolConfig using 'SYM[
    'Delta1:ChannelContext <- 'Delta:ChannelContext ; 
    'O1:Set`{CNameBound`} <- 'Outs:Set`{CNameBound`} ; 
    'P1:Protocol <- 'change_with_in_['fam_['_`[_`][''Opened.Sort,'bound_['_+_[
    'natAsTerm_['s_^2['0.Zero]],'qidAsTerm_[''N.Sort]]]]],'nf['__['_:_<-_[
    ''commit.Sort,'typeName_[''bool.Sort],'read_['_`[_`][''Commit.Sort,'_+_[
    'natAsTerm_['s_['0.Zero]],'qidAsTerm_[''N.Sort]]]]],'_:_<-_[''o.Sort,
    'typeName_[''unit.Sort],'read_['_`[_`][''Open.Sort,'_+_['natAsTerm_['s_[
    '0.Zero]],'qidAsTerm_[''N.Sort]]]]]],'return_[''commit.Sort]],
    'P:Protocol]]{'sugar-newNF[none]{empty} ; ('COMP-NEW-newNF-inside-new[
    none]{empty}) ! ; 'subst[['fam_['_`[_`][''Open.Sort,'bound_['_+_[
    'natAsTerm_['s_^2['0.Zero]],'qidAsTerm_[''N.Sort]]]]],'fam_['_`[_`][
    ''Opened.Sort,'bound_['_+_['natAsTerm_['s_^2['0.Zero]],'qidAsTerm_[
    ''N.Sort]]]]]]]} [none] .
  sd 'gn_9[[empty]] := matchrew 'pConf:ProtocolConfig s.t. 'pConfig[
    'Sigma:Signature,'Delta:ChannelContext,'P:Protocol,'Ins:Set`{CNameBound`},
    'Outs:Set`{CNameBound`},'A:Set`{BoolTerm`}] := 'pConf:ProtocolConfig by
    'pConf:ProtocolConfig using 'SYM[
    'Delta1:ChannelContext <- 'Delta:ChannelContext ; 
    'O1:Set`{CNameBound`} <- 'Outs:Set`{CNameBound`} ; 
    'P1:Protocol <- 'change_with_in_['fam_['_`[_`][''Out.Sort,'bound_['_+_[
    'natAsTerm_['s_^2['0.Zero]],'qidAsTerm_[''N.Sort]]]]],'nf['__['_:_<-_[
    ''ao.Sort,'typeName_[''unit.Sort],'read_['_`[_`][''AllOpen.Sort,'_+_[
    'natAsTerm_['s_^2['0.Zero]],'qidAsTerm_[''N.Sort]]]]],'_:_<-_[''sc.Sort,
    'typeName_[''bool.Sort],'read_['_`[_`][''SumCommit.Sort,'_+_['natAsTerm_[
    's_^2['0.Zero]],'qidAsTerm_[''N.Sort]]]]]],'return_[''sc.Sort]],
    'P:Protocol]]{'sugar-newNF[none]{empty} ; ('COMP-NEW-newNF-inside-new[
    none]{empty}) ! ; 'subst[['fam_['_`[_`][''SumCommit.Sort,'bound_['_+_[
    'natAsTerm_['s_^3['0.Zero]],'qidAsTerm_[''N.Sort]]]]],'fam_['_`[_`][
    ''Out.Sort,'bound_['_+_['natAsTerm_['s_^2['0.Zero]],'qidAsTerm_[
    ''N.Sort]]]]]]] ; 'subst[['chn_[''LastCommit.Sort],'fam_['_`[_`][
    ''Out.Sort,'bound_['_+_['natAsTerm_['s_^2['0.Zero]],'qidAsTerm_[
    ''N.Sort]]]]]]] ; 'applyAlphaNFPr[['fam_['_`[_`][''Out.Sort,'bound_['_+_[
    'natAsTerm_['s_^2['0.Zero]],'qidAsTerm_[''N.Sort]]]]],'__['<<_`,_>>[
    ''x.Sort,''sc.Sort],'emptyQidPairList.QidPairList]]]} [none] .
endsm empty none emptyTypeContext
Bye.
