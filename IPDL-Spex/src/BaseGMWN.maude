sload Lang/IPDL/syntax.maude

mod BASEGMWN is
 including APPROX-EQUALITY .
 protecting LIST{NatPairs} .
 protecting META-LEVEL .

 var i j l k n x : Nat .
 
  *** global parameters
 op N : -> Nat . 
 op K : -> Nat .
 
  *** 'N evaluates to N and 'K to K but don't use this in rewrites?
   
 *** for each party p, I(p) is the number of inputs for p
 op I : Nat -> Nat . 
 op C : -> Circuit . *** the circuit acting as parameter
 *** gates and circuits
 sort Gate .
 op input-gate : Nat Nat -> Gate [ctor] . *** first nat is the party
 op not-gate : Nat -> Gate [ctor] .
 op xor-gate : Nat Nat -> Gate [ctor] .
 op and-gate : Nat Nat -> Gate [ctor] .
 sort Circuit . *** list of gates
 subsort Gate < Circuit .
 op emptyCircuit : -> Circuit [ctor] .
 op __ : Circuit Circuit -> Circuit [ctor assoc id: emptyCircuit] .
 op wellFormed : Circuit Nat -> Bool .
 var circuit : Circuit .
 eq wellFormed(emptyCircuit, 0) = true .
 ceq wellFormed(circuit input-gate(i, j), s(n)) = true 
  if wellFormed(circuit, n) /\ i <= N + 1 /\ j < I(i) .
 ceq wellFormed(circuit not-gate(k), s(n)) = true
  if wellFormed(circuit, n) /\ k < n . 
 ceq wellFormed(circuit and-gate(k, l), s(n)) = true
  if wellFormed(circuit, n) /\ k < n /\ l < n .
 ceq wellFormed(circuit xor-gate(k, l), s(n)) = true
  if wellFormed(circuit, n) /\ k < n /\ l < n .
 *** helpers
 *** get the gate at the start of the circuit, after i pops
 *** i must be at most the length of circuit
 *** the circuit must be non-empty
 var gate : Gate .
 op gateAt : Circuit Nat -> Gate .
 eq gateAt(gate circuit, 0) = gate .
 eq gateAt(gate circuit, s(n)) = gateAt(circuit, n) .
 *** the wires of a gate, as a list
 op wiresOf : Gate -> List{NatPairs} .
 eq wiresOf(input-gate(i, j)) = (0 ;; i) (1 ;; j) .
 eq wiresOf(not-gate(i)) = (0 ;; i) .
 eq wiresOf(and-gate(k, l)) = (0 ;; k) (1 ;; l) .
 eq wiresOf(xor-gate(k, l)) = (0 ;; k) (1 ;; l) .
 *** list as an unsafe map
 var natPairs : List{NatPairs} .
 op _@@_ : List{NatPairs} Nat -> Nat .
 eq ( (i ;; k) natPairs) @@ i = k .
 ceq ( (l ;; k) natPairs) @@ i = natPairs @@ i if l =/= i .
 *** wire 0 of the circuit C at a given gate
 op wire0 : Nat -> Nat .
 eq wire0(i) = wiresOf(gateAt(C, i)) @@ 0 .
 *** wire 1 of the circuit C at a given gate
 op wire1 : Nat -> Nat .
 eq wire1(i) = wiresOf(gateAt(C, i)) @@ 1 .
 
   *** here we connect 'wire0 with wire0 
 var nt nt1 nt2 : NatTerm .
 var f : Map{Qid, NatTerm} .
 ceq evalTerm (fun 'wire0 nt) f = natAsTerm(wire0(x))
  if natAsTerm x := (evalTerm nt f) .
  eq evalTerm (fun 'wire0 nt) f = fun 'wire0 nt [owise] .  
 ceq evalTerm (fun 'wire1 nt) f = natAsTerm(wire1(x)) 
  if natAsTerm x := (evalTerm nt f) .
 eq evalTerm (fun 'wire1 nt) f = fun 'wire1 nt [owise] . 
 *** for I
 eq evalTerm (fun 'I nt) f = fun 'I (evalTerm nt f) .
 
  *** here we record the assumptions on indices
 var q : Qid .
 var A : Set{BoolTerm} .
 ceq A |= fun 'wire0 nt <T (qidAsTerm('N) + natAsTerm(2)) with f = true 
   if (apply 'isInputGate (evalTerm nt f)) in A .
 ceq A |= fun 'wire0 nt <T qidAsTerm('K) with f = true 
    if (apply 'isNotGate (evalTerm nt f)) in A .
 ceq A |= fun 'wire0 nt <T qidAsTerm('K) with f = true 
    if (apply 'isXorGate (evalTerm nt f)) in A .
 ceq A |= fun 'wire1 nt <T qidAsTerm('K) with f = true 
    if (apply 'isXorGate (evalTerm nt f)) in A .   
 ceq A |= fun 'wire0 nt <T qidAsTerm('K) with f = true 
    if (apply 'isAndGate (evalTerm nt f)) in A .
 ceq A |= fun 'wire1 nt <T qidAsTerm('K) with f = true 
    if (apply 'isAndGate (evalTerm nt f)) in A .
    
 ceq A |= fun 'wire0 nt <T nt with f = true  *** was N + 2
   if (apply 'isInputGate (evalTerm nt f)) in A .
 ceq A |= (fun 'wire1 nt <T fun 'I (fun 'wire0 nt)) with f = true 
    if (apply 'isInputGate (evalTerm nt f)) in A [label depBounds] .
 ceq A |= fun 'wire0 nt <T nt with f = true  *** was K here and below
    if (apply 'isNotGate (evalTerm nt f)) in A [label notIndex].
 ceq A |= fun 'wire0 nt <T nt with f = true 
    if (apply 'isXorGate (evalTerm nt f)) in A .
 ceq A |= fun 'wire1 nt <T nt with f = true 
    if (apply 'isXorGate (evalTerm nt f)) in A .   
 ceq A |= fun 'wire0 nt <T nt with f = true 
    if (apply 'isAndGate (evalTerm nt f)) in A [label andIndex] .
 ceq A |= fun 'wire1 nt <T nt with f = true 
    if (apply 'isAndGate (evalTerm nt f)) in A .
    
 ceq A |= fun 'wire0 nt1 <T nt2 with f = true 
  if A |= nt1 <T nt2 with f [label wireSmallThen0] .
 ceq A |= fun 'wire1 nt1 <T nt2 with f = true 
  if A |= nt1 <T nt2 with f [label wireSmallThen1] . 
  
 eq (A, apply 'isHonest nt) |= neg (apply 'isSemiHonest nt) with f = true .
 eq (A, apply 'isSemiHonest nt) |= neg (apply 'isHonest nt) with f = true .  
 eq (apply 'isHonest nt) disj (apply 'isSemiHonest nt) = trueBT .
 *** added later:
 eq (apply 'isHonest nt) conj (apply 'isSemiHonest nt) = falseBT .

 *** assumptions on the abstract protocols

 eq getOutputs(protocolRef('1OutOf4OTReal-Honest-Honest))
  = (chn ('OTOut[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]), 
     chn (('OTChc-0OtAdv)[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]), 
     chn (('OTChc-1OtAdv)[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]), 
     chn (('OTChcRcvd-0OtAdv)[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]),
     chn (('OTChcRcvd-1OtAdv)[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]), 
     chn (('OTMsg-0OtAdv)[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]), 
     chn (('OTMsg-1OtAdv)[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]), 
     chn (('OTMsg-2OtAdv)[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]), 
     chn (('OTMsg-3OtAdv)[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]), 
     chn (('OTMsgRcvd-0OtAdv)[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]), 
     chn (('OTMsgRcvd-1OtAdv)[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]), 
     chn (('OTMsgRcvd-2OtAdv)[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]),
     chn (('OTMsgRcvd-3OtAdv)[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]), 
     chn (('OTOutOtAdv)[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w])
   ) .   

  eq getOutputs(protocolRef('1OutOf4OTReal-Honest-SemiHonest))
  = (chn ('OTOut[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]), 
     chn (('OTChc-0OtAdv)[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]), 
     chn (('OTChc-1OtAdv)[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]), 
     chn (('OTChcRcvd-0OtAdv)[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]),
     chn (('OTChcRcvd-1OtAdv)[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]), 
     chn (('OTMsg-0OtAdv)[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]), 
     chn (('OTMsg-1OtAdv)[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]), 
     chn (('OTMsg-2OtAdv)[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]), 
     chn (('OTMsg-3OtAdv)[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]), 
     chn (('OTMsgRcvd-0OtAdv)[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]), 
     chn (('OTMsgRcvd-1OtAdv)[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]), 
     chn (('OTMsgRcvd-2OtAdv)[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]),
     chn (('OTMsgRcvd-3OtAdv)[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]), 
     chn (('OTOutOtAdv)[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w])
   ) .    

  eq getOutputs(protocolRef('1OutOf4OTReal-SemiHonest-Honest))
  = (chn ('OTOut[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]), 
     chn (('OTChc-0OtAdv)[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]), 
     chn (('OTChc-1OtAdv)[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]), 
     chn (('OTChcRcvd-0OtAdv)[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]),
     chn (('OTChcRcvd-1OtAdv)[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]), 
     chn (('OTMsg-0OtAdv)[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]), 
     chn (('OTMsg-1OtAdv)[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]), 
     chn (('OTMsg-2OtAdv)[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]), 
     chn (('OTMsg-3OtAdv)[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]), 
     chn (('OTMsgRcvd-0OtAdv)[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]), 
     chn (('OTMsgRcvd-1OtAdv)[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]), 
     chn (('OTMsgRcvd-2OtAdv)[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]),
     chn (('OTMsgRcvd-3OtAdv)[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]), 
     chn (('OTOutOtAdv)[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w])
   ) .    

   eq getOutputs(protocolRef('1OutOf4OTReal-SemiHonest-SemiHonest))
  = (chn ('OTOut[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]), 
     chn (('OTChc-0OtAdv)[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]), 
     chn (('OTChc-1OtAdv)[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]), 
     chn (('OTChcRcvd-0OtAdv)[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]),
     chn (('OTChcRcvd-1OtAdv)[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]), 
     chn (('OTMsg-0OtAdv)[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]), 
     chn (('OTMsg-1OtAdv)[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]), 
     chn (('OTMsg-2OtAdv)[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]), 
     chn (('OTMsg-3OtAdv)[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]), 
     chn (('OTMsgRcvd-0OtAdv)[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]), 
     chn (('OTMsgRcvd-1OtAdv)[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]), 
     chn (('OTMsgRcvd-2OtAdv)[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]),
     chn (('OTMsgRcvd-3OtAdv)[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]), 
     chn (('OTOutOtAdv)[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w])
   ) .   

  *** typing assumptions

 var Delta : ChannelContext .
 vars I : Set{CNameBound} .

eq typeOfAux(typesOf ('bool ; 'nat ; 'unit)
('** : typeName 'bool * typeName 'bool ~> typeName 'bool)
('neg : typeName 'bool ~> typeName 'bool)
('xor : typeName 'bool * typeName 'bool ~> typeName 'bool)
'flip : typeName 'unit ~>> typeName 'bool, 
Delta
(fam ('CtrbPartyAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('CtrbSumPartyAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('In[bound (natAsTerm 2 + qidAsTerm 'N) dependentBound 'I]) :: typeName 'bool)
(fam ('InPartyAdv[bound (natAsTerm 2 + qidAsTerm 'N) dependentBound 'I]) :: typeName 'bool)
(fam ('InRcvdPartyAdv[bound (natAsTerm 2 + qidAsTerm 'N) dependentBound 'I]) :: typeName 'unit)
(fam ('InShare$-SumPartyAdv[bound (natAsTerm 1 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) dependentBound 'I]) :: typeName 'bool)
(fam ('InShare$PartyAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) dependentBound 'I]) :: typeName 'bool)
(fam ('InSharePartyAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) dependentBound 'I]) :: typeName 'bool)
(fam ('OTChc-0[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('OTChc-0OtAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('OTChc-1[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('OTChc-1OtAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('OTChcRcvd-0OtAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'unit)
(fam ('OTChcRcvd-1OtAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'unit)
(fam ('OTMsg-0[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('OTMsg-0OtAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('OTMsg-1[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('OTMsg-1OtAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('OTMsg-2[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('OTMsg-2OtAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('OTMsg-3[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('OTMsg-3OtAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('OTMsgRcvd-0OtAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'unit)
(fam ('OTMsgRcvd-1OtAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'unit)
(fam ('OTMsgRcvd-2OtAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'unit)
(fam ('OTMsgRcvd-3OtAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'unit)
(fam ('OTOut[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('OTOutOtAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('Out[bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('OutPartyAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('OutSharePartyAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('OutShareSumPartyAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('RcvdBitPartyAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('RcvdInSharePartyAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) dependentBound 'I]) :: typeName 'bool)
(fam ('RcvdOutSharePartyAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('SendBitPartyAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('SendInSharePartyAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) dependentBound 'I]) :: typeName 'bool)
(fam ('SendOutSharePartyAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
fam ('SharePartyAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool, 
(I, fam ('In[bound (natAsTerm 2 + qidAsTerm 'N) dependentBound 'I])), 
(neg (apply 'isAndGate natAsTerm 0), 
 neg (apply 'isNotGate natAsTerm 0), 
 neg (apply 'isXorGate natAsTerm 0), 
 apply 'isHonest natAsTerm 1 + qidAsTerm 'N, 
 (apply 'isHonest qidAsTerm 'm) conj apply 'isHonest qidAsTerm 'n,
 A
), 
 embedProtocol(protocolRef('1OutOf4OTReal-Honest-Honest), 'phi from (chn ('OTChc-0[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]) :: typeName 'bool)
(chn ('OTChc-0OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]) :: typeName 'bool)
(chn ('OTChc-1[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]) :: typeName 'bool)
(chn ('OTChc-1OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]) :: typeName 'bool)
(chn ('OTChcRcvd-0OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]) :: typeName 'unit)
(chn ('OTChcRcvd-1OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]) :: typeName 'unit)
(chn ('OTMsg-0[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]) :: typeName 'bool)
(chn ('OTMsg-0OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]) :: typeName 'bool)
(chn ('OTMsg-1[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]) :: typeName 'bool)
(chn ('OTMsg-1OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]) :: typeName 'bool)
(chn ('OTMsg-2[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]) :: typeName 'bool)
(chn ('OTMsg-2OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]) :: typeName 'bool)
(chn ('OTMsg-3[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]) :: typeName 'bool)
(chn ('OTMsg-3OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]) :: typeName 'bool)
(chn ('OTMsgRcvd-0OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]) :: typeName 'unit)
(chn ('OTMsgRcvd-1OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]) :: typeName 'unit)
(chn ('OTMsgRcvd-2OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]) :: typeName 'unit)
(chn ('OTMsgRcvd-3OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]) :: typeName 'unit)
(chn ('OTOut[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]) :: typeName 'bool)
chn ('OTOutOtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]) :: typeName 'bool to (chn ('OTChc-0[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]) :: typeName 'bool)
(chn ('OTChc-0OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]) :: typeName 'bool)
(chn ('OTChc-1[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]) :: typeName 'bool)
(chn ('OTChc-1OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]) :: typeName 'bool)
(chn ('OTChcRcvd-0OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]) :: typeName 'unit)
(chn ('OTChcRcvd-1OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]) :: typeName 'unit)
(chn ('OTMsg-0[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]) :: typeName 'bool)
(chn ('OTMsg-0OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]) :: typeName 'bool)
(chn ('OTMsg-1[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]) :: typeName 'bool)
(chn ('OTMsg-1OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]) :: typeName 'bool)
(chn ('OTMsg-2[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]) :: typeName 'bool)
(chn ('OTMsg-2OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]) :: typeName 'bool)
(chn ('OTMsg-3[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]) :: typeName 'bool)
(chn ('OTMsg-3OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]) :: typeName 'bool)
(chn ('OTMsgRcvd-0OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]) :: typeName 'unit)
(chn ('OTMsgRcvd-1OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]) :: typeName 'unit)
(chn ('OTMsgRcvd-2OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]) :: typeName 'unit)
(chn ('OTMsgRcvd-3OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]) :: typeName 'unit)
(chn ('OTOut[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]) :: typeName 'bool)
chn ('OTOutOtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]) :: typeName 'bool is ('OTChc-0[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w] to ('OTChc-0[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]))
    ; ('OTChc-0OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w] to ('OTChc-0OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k])) ; ('OTChc-1[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w] to (
    'OTChc-1[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k])) ; ('OTChc-1OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w] to ('OTChc-1OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k])) ; (
    'OTChcRcvd-0OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w] to ('OTChcRcvd-0OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k])) ; ('OTChcRcvd-1OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm
    'w] to ('OTChcRcvd-1OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k])) ; ('OTMsg-0[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w] to ('OTMsg-0[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k])) ; (
    'OTMsg-0OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w] to ('OTMsg-0OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k])) ; ('OTMsg-1[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w] to ('OTMsg-1[
    qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k])) ; ('OTMsg-1OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w] to ('OTMsg-1OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k])) ; ('OTMsg-2[
    qidAsTerm 's qidAsTerm 'r qidAsTerm 'w] to ('OTMsg-2[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k])) ; ('OTMsg-2OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w] to ('OTMsg-2OtAdv[qidAsTerm
    'n qidAsTerm 'm qidAsTerm 'k])) ; ('OTMsg-3[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w] to ('OTMsg-3[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k])) ; ('OTMsg-3OtAdv[qidAsTerm 's qidAsTerm
    'r qidAsTerm 'w] to ('OTMsg-3OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k])) ; ('OTMsgRcvd-0OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w] to ('OTMsgRcvd-0OtAdv[qidAsTerm 'n
    qidAsTerm 'm qidAsTerm 'k])) ; ('OTMsgRcvd-1OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w] to ('OTMsgRcvd-1OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k])) ; ('OTMsgRcvd-2OtAdv[
    qidAsTerm 's qidAsTerm 'r qidAsTerm 'w] to ('OTMsgRcvd-2OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k])) ; ('OTMsgRcvd-3OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w] to (
    'OTMsgRcvd-3OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k])) ; ('OTOut[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w] to ('OTOut[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k])) ; 'OTOutOtAdv[
    qidAsTerm 's qidAsTerm 'r qidAsTerm 'w] to ('OTOutOtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]))) 
    = true [label typeOfHH] .
    
eq typeOfAux(typesOf ('bool ; 'nat ; 'unit)
('** : typeName 'bool * typeName 'bool ~> typeName 'bool)
('neg : typeName 'bool ~> typeName 'bool)
('xor : typeName 'bool * typeName 'bool ~> typeName 'bool)
'flip : typeName 'unit ~>> typeName 'bool, 
Delta
(fam ('CtrbPartyAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('CtrbSumPartyAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('In[bound (natAsTerm 2 + qidAsTerm 'N) dependentBound 'I]) :: typeName 'bool)
(fam ('InPartyAdv[bound (natAsTerm 2 + qidAsTerm 'N) dependentBound 'I]) :: typeName 'bool)
(fam ('InRcvdPartyAdv[bound (natAsTerm 2 + qidAsTerm 'N) dependentBound 'I]) :: typeName 'unit)
(fam ('InShare$-SumPartyAdv[bound (natAsTerm 1 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) dependentBound 'I]) :: typeName 'bool)
(fam ('InShare$PartyAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) dependentBound 'I]) :: typeName 'bool)
(fam ('InSharePartyAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) dependentBound 'I]) :: typeName 'bool)
(fam ('OTChc-0[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('OTChc-0OtAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('OTChc-1[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('OTChc-1OtAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('OTChcRcvd-0OtAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'unit)
(fam ('OTChcRcvd-1OtAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'unit)
(fam ('OTMsg-0[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('OTMsg-0OtAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('OTMsg-1[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('OTMsg-1OtAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('OTMsg-2[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('OTMsg-2OtAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('OTMsg-3[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('OTMsg-3OtAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('OTMsgRcvd-0OtAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'unit)
(fam ('OTMsgRcvd-1OtAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'unit)
(fam ('OTMsgRcvd-2OtAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'unit)
(fam ('OTMsgRcvd-3OtAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'unit)
(fam ('OTOut[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('OTOutOtAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('Out[bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('OutPartyAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('OutSharePartyAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('OutShareSumPartyAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('RcvdBitPartyAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('RcvdInSharePartyAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) dependentBound 'I]) :: typeName 'bool)
(fam ('RcvdOutSharePartyAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('SendBitPartyAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('SendInSharePartyAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) dependentBound 'I]) :: typeName 'bool)
(fam ('SendOutSharePartyAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
fam ('SharePartyAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool, 
(I, fam ('In[bound (natAsTerm 2 + qidAsTerm 'N) dependentBound 'I])), 
(neg (apply 'isAndGate
    natAsTerm 0), neg (apply 'isNotGate natAsTerm 0), neg (apply 'isXorGate natAsTerm 0), neg ((apply 'isHonest qidAsTerm 'm) conj apply 'isHonest qidAsTerm 'n), apply 'isHonest
    natAsTerm 1 + qidAsTerm 'N, 
    (apply 'isHonest qidAsTerm 'm) conj apply 'isSemiHonest qidAsTerm 'n,
    A), 
    embedProtocol(protocolRef('1OutOf4OTReal-SemiHonest-Honest), 'phi from (chn (
    'OTChc-0[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]) :: typeName 'bool)
(chn ('OTChc-0OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]) :: typeName 'bool)
(chn ('OTChc-1[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]) :: typeName 'bool)
(chn ('OTChc-1OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]) :: typeName 'bool)
(chn ('OTChcRcvd-0OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]) :: typeName 'unit)
(chn ('OTChcRcvd-1OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]) :: typeName 'unit)
(chn ('OTMsg-0[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]) :: typeName 'bool)
(chn ('OTMsg-0OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]) :: typeName 'bool)
(chn ('OTMsg-1[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]) :: typeName 'bool)
(chn ('OTMsg-1OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]) :: typeName 'bool)
(chn ('OTMsg-2[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]) :: typeName 'bool)
(chn ('OTMsg-2OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]) :: typeName 'bool)
(chn ('OTMsg-3[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]) :: typeName 'bool)
(chn ('OTMsg-3OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]) :: typeName 'bool)
(chn ('OTMsgRcvd-0OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]) :: typeName 'unit)
(chn ('OTMsgRcvd-1OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]) :: typeName 'unit)
(chn ('OTMsgRcvd-2OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]) :: typeName 'unit)
(chn ('OTMsgRcvd-3OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]) :: typeName 'unit)
(chn ('OTOut[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]) :: typeName 'bool)
chn ('OTOutOtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]) :: typeName 'bool to (chn ('OTChc-0[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]) :: typeName 'bool)
(chn ('OTChc-0OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]) :: typeName 'bool)
(chn ('OTChc-1[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]) :: typeName 'bool)
(chn ('OTChc-1OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]) :: typeName 'bool)
(chn ('OTChcRcvd-0OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]) :: typeName 'unit)
(chn ('OTChcRcvd-1OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]) :: typeName 'unit)
(chn ('OTMsg-0[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]) :: typeName 'bool)
(chn ('OTMsg-0OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]) :: typeName 'bool)
(chn ('OTMsg-1[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]) :: typeName 'bool)
(chn ('OTMsg-1OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]) :: typeName 'bool)
(chn ('OTMsg-2[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]) :: typeName 'bool)
(chn ('OTMsg-2OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]) :: typeName 'bool)
(chn ('OTMsg-3[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]) :: typeName 'bool)
(chn ('OTMsg-3OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]) :: typeName 'bool)
(chn ('OTMsgRcvd-0OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]) :: typeName 'unit)
(chn ('OTMsgRcvd-1OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]) :: typeName 'unit)
(chn ('OTMsgRcvd-2OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]) :: typeName 'unit)
(chn ('OTMsgRcvd-3OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]) :: typeName 'unit)
(chn ('OTOut[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]) :: typeName 'bool)
chn ('OTOutOtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]) :: typeName 'bool is ('OTChc-0[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w] to ('OTChc-0[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]))
    ; ('OTChc-0OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w] to ('OTChc-0OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k])) ; ('OTChc-1[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w] to (
    'OTChc-1[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k])) ; ('OTChc-1OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w] to ('OTChc-1OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k])) ; (
    'OTChcRcvd-0OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w] to ('OTChcRcvd-0OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k])) ; ('OTChcRcvd-1OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm
    'w] to ('OTChcRcvd-1OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k])) ; ('OTMsg-0[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w] to ('OTMsg-0[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k])) ; (
    'OTMsg-0OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w] to ('OTMsg-0OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k])) ; ('OTMsg-1[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w] to ('OTMsg-1[
    qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k])) ; ('OTMsg-1OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w] to ('OTMsg-1OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k])) ; ('OTMsg-2[
    qidAsTerm 's qidAsTerm 'r qidAsTerm 'w] to ('OTMsg-2[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k])) ; ('OTMsg-2OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w] to ('OTMsg-2OtAdv[qidAsTerm
    'n qidAsTerm 'm qidAsTerm 'k])) ; ('OTMsg-3[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w] to ('OTMsg-3[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k])) ; ('OTMsg-3OtAdv[qidAsTerm 's qidAsTerm
    'r qidAsTerm 'w] to ('OTMsg-3OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k])) ; ('OTMsgRcvd-0OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w] to ('OTMsgRcvd-0OtAdv[qidAsTerm 'n
    qidAsTerm 'm qidAsTerm 'k])) ; ('OTMsgRcvd-1OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w] to ('OTMsgRcvd-1OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k])) ; ('OTMsgRcvd-2OtAdv[
    qidAsTerm 's qidAsTerm 'r qidAsTerm 'w] to ('OTMsgRcvd-2OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k])) ; ('OTMsgRcvd-3OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w] to (
    'OTMsgRcvd-3OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k])) ; ('OTOut[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w] to ('OTOut[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k])) ; 'OTOutOtAdv[
    qidAsTerm 's qidAsTerm 'r qidAsTerm 'w] to ('OTOutOtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]))) 
    = true [label typeOfSHH] .
    
eq  typeOfAux(typesOf ('bool ; 'nat ; 'unit)
('** : typeName 'bool * typeName 'bool ~> typeName 'bool)
('neg : typeName 'bool ~> typeName 'bool)
('xor : typeName 'bool * typeName 'bool ~> typeName 'bool)
'flip : typeName 'unit ~>> typeName 'bool, 
Delta 
(fam ('CtrbPartyAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('CtrbSumPartyAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('In[bound (natAsTerm 2 + qidAsTerm 'N) dependentBound 'I]) :: typeName 'bool)
(fam ('InPartyAdv[bound (natAsTerm 2 + qidAsTerm 'N) dependentBound 'I]) :: typeName 'bool)
(fam ('InRcvdPartyAdv[bound (natAsTerm 2 + qidAsTerm 'N) dependentBound 'I]) :: typeName 'unit)
(fam ('InShare$-SumPartyAdv[bound (natAsTerm 1 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) dependentBound 'I]) :: typeName 'bool)
(fam ('InShare$PartyAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) dependentBound 'I]) :: typeName 'bool)
(fam ('InSharePartyAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) dependentBound 'I]) :: typeName 'bool)
(fam ('OTChc-0[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('OTChc-0OtAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('OTChc-1[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('OTChc-1OtAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('OTChcRcvd-0OtAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'unit)
(fam ('OTChcRcvd-1OtAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'unit)
(fam ('OTMsg-0[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('OTMsg-0OtAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('OTMsg-1[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('OTMsg-1OtAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('OTMsg-2[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('OTMsg-2OtAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('OTMsg-3[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('OTMsg-3OtAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('OTMsgRcvd-0OtAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'unit)
(fam ('OTMsgRcvd-1OtAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'unit)
(fam ('OTMsgRcvd-2OtAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'unit)
(fam ('OTMsgRcvd-3OtAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'unit)
(fam ('OTOut[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('OTOutOtAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('Out[bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('OutPartyAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('OutSharePartyAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('OutShareSumPartyAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('RcvdBitPartyAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('RcvdInSharePartyAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) dependentBound 'I]) :: typeName 'bool)
(fam ('RcvdOutSharePartyAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('SendBitPartyAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('SendInSharePartyAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) dependentBound 'I]) :: typeName 'bool)
(fam ('SendOutSharePartyAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
fam ('SharePartyAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool, 
(I, fam ('In[bound (natAsTerm 2 + qidAsTerm 'N) dependentBound 'I])), 
(neg (apply 'isAndGate
    natAsTerm 0), neg (apply 'isNotGate natAsTerm 0), neg (apply 'isXorGate natAsTerm 0), neg ((apply 'isHonest qidAsTerm 'm) conj apply 'isHonest qidAsTerm 'n), neg ((apply 'isHonest
    qidAsTerm 'm) conj apply 'isSemiHonest qidAsTerm 'n), 
    apply 'isHonest natAsTerm 1 + qidAsTerm 'N, 
    (apply 'isHonest qidAsTerm 'n) conj apply 'isSemiHonest qidAsTerm 'm, A),
    embedProtocol(protocolRef('1OutOf4OTReal-Honest-SemiHonest), 'phi from (chn ('OTChc-0[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]) :: typeName 'bool)
(chn ('OTChc-0OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]) :: typeName 'bool)
(chn ('OTChc-1[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]) :: typeName 'bool)
(chn ('OTChc-1OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]) :: typeName 'bool)
(chn ('OTChcRcvd-0OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]) :: typeName 'unit)
(chn ('OTChcRcvd-1OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]) :: typeName 'unit)
(chn ('OTMsg-0[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]) :: typeName 'bool)
(chn ('OTMsg-0OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]) :: typeName 'bool)
(chn ('OTMsg-1[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]) :: typeName 'bool)
(chn ('OTMsg-1OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]) :: typeName 'bool)
(chn ('OTMsg-2[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]) :: typeName 'bool)
(chn ('OTMsg-2OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]) :: typeName 'bool)
(chn ('OTMsg-3[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]) :: typeName 'bool)
(chn ('OTMsg-3OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]) :: typeName 'bool)
(chn ('OTMsgRcvd-0OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]) :: typeName 'unit)
(chn ('OTMsgRcvd-1OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]) :: typeName 'unit)
(chn ('OTMsgRcvd-2OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]) :: typeName 'unit)
(chn ('OTMsgRcvd-3OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]) :: typeName 'unit)
(chn ('OTOut[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]) :: typeName 'bool)
chn ('OTOutOtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]) :: typeName 'bool to (chn ('OTChc-0[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]) :: typeName 'bool)
(chn ('OTChc-0OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]) :: typeName 'bool)
(chn ('OTChc-1[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]) :: typeName 'bool)
(chn ('OTChc-1OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]) :: typeName 'bool)
(chn ('OTChcRcvd-0OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]) :: typeName 'unit)
(chn ('OTChcRcvd-1OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]) :: typeName 'unit)
(chn ('OTMsg-0[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]) :: typeName 'bool)
(chn ('OTMsg-0OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]) :: typeName 'bool)
(chn ('OTMsg-1[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]) :: typeName 'bool)
(chn ('OTMsg-1OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]) :: typeName 'bool)
(chn ('OTMsg-2[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]) :: typeName 'bool)
(chn ('OTMsg-2OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]) :: typeName 'bool)
(chn ('OTMsg-3[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]) :: typeName 'bool)
(chn ('OTMsg-3OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]) :: typeName 'bool)
(chn ('OTMsgRcvd-0OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]) :: typeName 'unit)
(chn ('OTMsgRcvd-1OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]) :: typeName 'unit)
(chn ('OTMsgRcvd-2OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]) :: typeName 'unit)
(chn ('OTMsgRcvd-3OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]) :: typeName 'unit)
(chn ('OTOut[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]) :: typeName 'bool)
chn ('OTOutOtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]) :: typeName 'bool is ('OTChc-0[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w] to ('OTChc-0[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]))
    ; ('OTChc-0OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w] to ('OTChc-0OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k])) ; ('OTChc-1[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w] to (
    'OTChc-1[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k])) ; ('OTChc-1OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w] to ('OTChc-1OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k])) ; (
    'OTChcRcvd-0OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w] to ('OTChcRcvd-0OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k])) ; ('OTChcRcvd-1OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm
    'w] to ('OTChcRcvd-1OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k])) ; ('OTMsg-0[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w] to ('OTMsg-0[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k])) ; (
    'OTMsg-0OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w] to ('OTMsg-0OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k])) ; ('OTMsg-1[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w] to ('OTMsg-1[
    qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k])) ; ('OTMsg-1OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w] to ('OTMsg-1OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k])) ; ('OTMsg-2[
    qidAsTerm 's qidAsTerm 'r qidAsTerm 'w] to ('OTMsg-2[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k])) ; ('OTMsg-2OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w] to ('OTMsg-2OtAdv[qidAsTerm
    'n qidAsTerm 'm qidAsTerm 'k])) ; ('OTMsg-3[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w] to ('OTMsg-3[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k])) ; ('OTMsg-3OtAdv[qidAsTerm 's qidAsTerm
    'r qidAsTerm 'w] to ('OTMsg-3OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k])) ; ('OTMsgRcvd-0OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w] to ('OTMsgRcvd-0OtAdv[qidAsTerm 'n
    qidAsTerm 'm qidAsTerm 'k])) ; ('OTMsgRcvd-1OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w] to ('OTMsgRcvd-1OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k])) ; ('OTMsgRcvd-2OtAdv[
    qidAsTerm 's qidAsTerm 'r qidAsTerm 'w] to ('OTMsgRcvd-2OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k])) ; ('OTMsgRcvd-3OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w] to (
    'OTMsgRcvd-3OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k])) ; ('OTOut[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w] to ('OTOut[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k])) ; 'OTOutOtAdv[
    qidAsTerm 's qidAsTerm 'r qidAsTerm 'w] to ('OTOutOtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]))) 
    = true [label typeOfHSH] . 
    
eq  typeOfAux(typesOf ('bool ; 'nat ; 'unit)
('** : typeName 'bool * typeName 'bool ~> typeName 'bool)
('neg : typeName 'bool ~> typeName 'bool)
('xor : typeName 'bool * typeName 'bool ~> typeName 'bool)
'flip : typeName 'unit ~>> typeName 'bool, 
Delta
(fam ('CtrbPartyAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('CtrbSumPartyAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('In[bound (natAsTerm 2 + qidAsTerm 'N) dependentBound 'I]) :: typeName 'bool)
(fam ('InPartyAdv[bound (natAsTerm 2 + qidAsTerm 'N) dependentBound 'I]) :: typeName 'bool)
(fam ('InRcvdPartyAdv[bound (natAsTerm 2 + qidAsTerm 'N) dependentBound 'I]) :: typeName 'unit)
(fam ('InShare$-SumPartyAdv[bound (natAsTerm 1 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) dependentBound 'I]) :: typeName 'bool)
(fam ('InShare$PartyAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) dependentBound 'I]) :: typeName 'bool)
(fam ('InSharePartyAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) dependentBound 'I]) :: typeName 'bool)
(fam ('OTChc-0[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('OTChc-0OtAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('OTChc-1[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('OTChc-1OtAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('OTChcRcvd-0OtAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'unit)
(fam ('OTChcRcvd-1OtAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'unit)
(fam ('OTMsg-0[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('OTMsg-0OtAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('OTMsg-1[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('OTMsg-1OtAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('OTMsg-2[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('OTMsg-2OtAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('OTMsg-3[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('OTMsg-3OtAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('OTMsgRcvd-0OtAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'unit)
(fam ('OTMsgRcvd-1OtAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'unit)
(fam ('OTMsgRcvd-2OtAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'unit)
(fam ('OTMsgRcvd-3OtAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'unit)
(fam ('OTOut[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('OTOutOtAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('Out[bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('OutPartyAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('OutSharePartyAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('OutShareSumPartyAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('RcvdBitPartyAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('RcvdInSharePartyAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) dependentBound 'I]) :: typeName 'bool)
(fam ('RcvdOutSharePartyAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('SendBitPartyAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
(fam ('SendInSharePartyAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) dependentBound 'I]) :: typeName 'bool)
(fam ('SendOutSharePartyAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool)
fam ('SharePartyAdv[bound (natAsTerm 2 + qidAsTerm 'N) bound qidAsTerm 'K]) :: typeName 'bool, 
(I, fam ('In[bound (natAsTerm 2 + qidAsTerm 'N) dependentBound 'I])), 
(neg (apply 'isAndGate
    natAsTerm 0), neg (apply 'isNotGate natAsTerm 0), neg (apply 'isXorGate natAsTerm 0), neg ((apply 'isHonest qidAsTerm 'm) conj apply 'isHonest qidAsTerm 'n), neg ((apply 'isHonest
    qidAsTerm 'm) conj apply 'isSemiHonest qidAsTerm 'n), neg ((apply 'isHonest qidAsTerm 'n) conj apply 'isSemiHonest qidAsTerm 'm), apply 'isHonest natAsTerm 1 + qidAsTerm 'N, (
    apply 'isSemiHonest qidAsTerm 'm) conj apply 'isSemiHonest qidAsTerm 'n,
    A), 
embedProtocol(protocolRef('1OutOf4OTReal-SemiHonest-SemiHonest), 'phi from (chn ('OTChc-0[qidAsTerm 's
    qidAsTerm 'r qidAsTerm 'w]) :: typeName 'bool)
(chn ('OTChc-0OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]) :: typeName 'bool)
(chn ('OTChc-1[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]) :: typeName 'bool)
(chn ('OTChc-1OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]) :: typeName 'bool)
(chn ('OTChcRcvd-0OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]) :: typeName 'unit)
(chn ('OTChcRcvd-1OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]) :: typeName 'unit)
(chn ('OTMsg-0[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]) :: typeName 'bool)
(chn ('OTMsg-0OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]) :: typeName 'bool)
(chn ('OTMsg-1[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]) :: typeName 'bool)
(chn ('OTMsg-1OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]) :: typeName 'bool)
(chn ('OTMsg-2[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]) :: typeName 'bool)
(chn ('OTMsg-2OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]) :: typeName 'bool)
(chn ('OTMsg-3[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]) :: typeName 'bool)
(chn ('OTMsg-3OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]) :: typeName 'bool)
(chn ('OTMsgRcvd-0OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]) :: typeName 'unit)
(chn ('OTMsgRcvd-1OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]) :: typeName 'unit)
(chn ('OTMsgRcvd-2OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]) :: typeName 'unit)
(chn ('OTMsgRcvd-3OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]) :: typeName 'unit)
(chn ('OTOut[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]) :: typeName 'bool)
chn ('OTOutOtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w]) :: typeName 'bool to (chn ('OTChc-0[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]) :: typeName 'bool)
(chn ('OTChc-0OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]) :: typeName 'bool)
(chn ('OTChc-1[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]) :: typeName 'bool)
(chn ('OTChc-1OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]) :: typeName 'bool)
(chn ('OTChcRcvd-0OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]) :: typeName 'unit)
(chn ('OTChcRcvd-1OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]) :: typeName 'unit)
(chn ('OTMsg-0[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]) :: typeName 'bool)
(chn ('OTMsg-0OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]) :: typeName 'bool)
(chn ('OTMsg-1[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]) :: typeName 'bool)
(chn ('OTMsg-1OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]) :: typeName 'bool)
(chn ('OTMsg-2[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]) :: typeName 'bool)
(chn ('OTMsg-2OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]) :: typeName 'bool)
(chn ('OTMsg-3[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]) :: typeName 'bool)
(chn ('OTMsg-3OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]) :: typeName 'bool)
(chn ('OTMsgRcvd-0OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]) :: typeName 'unit)
(chn ('OTMsgRcvd-1OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]) :: typeName 'unit)
(chn ('OTMsgRcvd-2OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]) :: typeName 'unit)
(chn ('OTMsgRcvd-3OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]) :: typeName 'unit)
(chn ('OTOut[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]) :: typeName 'bool)
chn ('OTOutOtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]) :: typeName 'bool is ('OTChc-0[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w] to ('OTChc-0[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]))
    ; ('OTChc-0OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w] to ('OTChc-0OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k])) ; ('OTChc-1[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w] to (
    'OTChc-1[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k])) ; ('OTChc-1OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w] to ('OTChc-1OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k])) ; (
    'OTChcRcvd-0OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w] to ('OTChcRcvd-0OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k])) ; ('OTChcRcvd-1OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm
    'w] to ('OTChcRcvd-1OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k])) ; ('OTMsg-0[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w] to ('OTMsg-0[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k])) ; (
    'OTMsg-0OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w] to ('OTMsg-0OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k])) ; ('OTMsg-1[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w] to ('OTMsg-1[
    qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k])) ; ('OTMsg-1OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w] to ('OTMsg-1OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k])) ; ('OTMsg-2[
    qidAsTerm 's qidAsTerm 'r qidAsTerm 'w] to ('OTMsg-2[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k])) ; ('OTMsg-2OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w] to ('OTMsg-2OtAdv[qidAsTerm
    'n qidAsTerm 'm qidAsTerm 'k])) ; ('OTMsg-3[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w] to ('OTMsg-3[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k])) ; ('OTMsg-3OtAdv[qidAsTerm 's qidAsTerm
    'r qidAsTerm 'w] to ('OTMsg-3OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k])) ; ('OTMsgRcvd-0OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w] to ('OTMsgRcvd-0OtAdv[qidAsTerm 'n
    qidAsTerm 'm qidAsTerm 'k])) ; ('OTMsgRcvd-1OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w] to ('OTMsgRcvd-1OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k])) ; ('OTMsgRcvd-2OtAdv[
    qidAsTerm 's qidAsTerm 'r qidAsTerm 'w] to ('OTMsgRcvd-2OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k])) ; ('OTMsgRcvd-3OtAdv[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w] to (
    'OTMsgRcvd-3OtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k])) ; ('OTOut[qidAsTerm 's qidAsTerm 'r qidAsTerm 'w] to ('OTOut[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k])) ; 'OTOutOtAdv[
    qidAsTerm 's qidAsTerm 'r qidAsTerm 'w] to ('OTOutOtAdv[qidAsTerm 'n qidAsTerm 'm qidAsTerm 'k]))) 
    = true [label typeOfSHSH] .


 endm



